"""–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤"""

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext          # –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

import app.keyboards.admin.database_editing.managers as kb
import app.keyboards.admin.database_editing.common_user_keyboards as kb_c
from app.keyboards.user.order_placing import all_restaurant_categories
import app.states as st
import app.database.requests.managers as rq
import app.filters as flt

from app.database.requests.restaurants import get_restaurant

manager_edit_router = Router()
manager_edit_router.message.filter(flt.CheckAdmin())
manager_edit_router.callback_query.filter(flt.CheckAdmin())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–µ–Ω–µ–¥–∂–µ—Ä—ã"
@manager_edit_router.message(F.text == '–ú–µ–Ω–µ–¥–∂–µ—Ä—ã üë®‚ÄçüíºÔ∏è')
async def manager_edit_start(message: Message, state: FSMContext):
    await state.set_state(st.ManagerAddition.choose)
    await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç–∞—é—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—ã:',
                         reply_markup=await all_restaurant_categories())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
@manager_edit_router.callback_query(st.ManagerAddition.choose, F.data.startswith('restaurant_'))
async def manager_choosing(callback: CallbackQuery):
    await callback.answer('')
    restaurant = await get_restaurant(int(callback.data.split('_')[1]))
    await callback.message.edit_text(f'–°–ø–∏—Å–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {restaurant.name}:',
                                     reply_markup=await kb.managers(restaurant.id))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
@manager_edit_router.callback_query(F.data.startswith('add_manager_'))
async def manager_addition_start(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    restaurant_id = int(callback.data.split('_')[2])
    await state.set_state(st.ManagerAddition.restaurant_id)
    await state.update_data(restaurant_id=restaurant_id)
    await state.set_state(st.CommonUserAddition.role)
    await state.update_data(role=2)
    await state.set_state(st.CommonUserAddition.name)
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –∏–º—è')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
@manager_edit_router.callback_query(F.data.startswith('manager_'))
async def manager_editing_start(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    await state.set_state(st.CommonUserEditing.role)
    await state.update_data(role=2)
    manager = await rq.get_manager_by_id(int(callback.data.split('_')[1]))
    await callback.message.edit_text(f'–ú–µ–Ω–µ–¥–∂–µ—Ä ‚Ññ {manager.id}:\n{manager.name} {manager.surname}\n'
                                     f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {manager.phone_number}\nTelegram id: {manager.tg_id}',
                                     reply_markup=await kb_c.common_editing(manager.id, 2))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –∏–∑ –º–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
@manager_edit_router.callback_query(F.data == 'managers')
async def to_manager_start(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    await manager_edit_start(callback.message, state)
