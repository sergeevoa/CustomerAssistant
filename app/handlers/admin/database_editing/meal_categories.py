"""–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–ª—é–¥"""

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext          # –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

import app.keyboards.admin.database_editing.meal_categories as kb
import app.keyboards.multi_role as kb_m
import app.states as st
import app.database.requests.meals as rq_m
import app.database.requests.restaurants as rq_r
import app.database.requests.meal_categories as rq
import app.filters as flt

from app.keyboards.admin.database_editing.restaurants import back_to_restaurant_meal_categories

meal_cat_router = Router()
meal_cat_router.message.filter(flt.CheckAdmin())
meal_cat_router.callback_query.filter(flt.CheckAdmin())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ë–ª—é–¥" –∏–∑ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
@meal_cat_router.callback_query(F.data.startswith('meal_categories_editing_'))
async def meal_cat_edit_start(callback: CallbackQuery):
    await callback.answer('')
    restaurant = await rq_r.get_restaurant(int(callback.data.split('_')[3]))
    await callback.message.answer(f'–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ {restaurant.name} ü•°',
                                  reply_markup=await kb.meal_categories(restaurant.id))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ"
@meal_cat_router.callback_query(F.data.startswith('add_meal_category_in_'))
async def meal_category_addition_start(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    await state.set_state(st.MealCategoryAddition.category_id)
    await state.update_data(restaurant_id=int(callback.data.split('_')[4]))
    await state.set_state(st.MealCategoryAddition.name)
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ü•°')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@meal_cat_router.message(st.MealCategoryAddition.name)
async def name_input(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(st.MealCategoryAddition.picture_link)
    await message.answer('–û—Ç–ª–∏—á–Ω–æ!\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üì∏')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@meal_cat_router.message(F.photo, st.MealCategoryAddition.picture_link)
async def get_picture_link(message: Message, state: FSMContext):
    data = await state.get_data()
    await rq.add_meal_category(data["name"], message.photo[-1].file_id, data["restaurant_id"])
    await message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!', reply_markup=await kb.meal_categories(data["restaurant_id"]))
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –±–ª—é–¥–∞
@meal_cat_router.callback_query(F.data.startswith('ad_meal_category_'))
async def meal_category_editing(callback: CallbackQuery):
    await callback.answer('')
    meal_category = await rq.get_meal_category(int(callback.data.split('_')[3]))
    await callback.message.answer_photo(photo=meal_category.picture_link, caption=f'{meal_category.name}',
                                        reply_markup=await kb.meal_category_editing(meal_category))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
@meal_cat_router.callback_query(F.data.startswith('meal_category_edit_'))
async def meal_category_data_changing(callback: CallbackQuery):
    await callback.answer('')
    category_id = int(callback.data.split('_')[3])
    await callback.message.answer('–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? ü§î',
                                  reply_markup=await kb.meal_category_data_choosing(category_id))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ"
@meal_cat_router.callback_query(F.data.startswith('meal_cat_name_editing_'))
async def name_changing(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    await state.set_state(st.MealCategoryEditing.name)
    await state.update_data(meal_category_id=int(callback.data.split('_')[4]))
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.\n–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 30 —Å–∏–º–≤–æ–ª–æ–≤ ‚ùóÔ∏è')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@meal_cat_router.message(st.MealCategoryEditing.name)
async def update_name(message: Message, state: FSMContext):
    data = await state.get_data()
    await rq.update_meal_category_name(data["meal_category_id"], message.text)
    await message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! ü¶â', reply_markup=await kb.back_to_meal_category(data["meal_category_id"]))
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ"
@meal_cat_router.callback_query(F.data.startswith('meal_cat_photo_editing_'))
async def photo_changing(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    await state.set_state(st.MealCategoryEditing.picture_link)
    await state.update_data(meal_category_id=int(callback.data.split('_')[4]))
    await callback.message.edit_text('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ üì∑')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥
@meal_cat_router.message(F.photo, st.MealCategoryEditing.picture_link)
async def update_picture_link(message: Message, state: FSMContext):
    data = await state.get_data()
    await rq.update_meal_category_photo(data["meal_category_id"], message.photo[-1].file_id)
    await message.answer('–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞! üì∑ü¶â',
                         reply_markup=await kb.back_to_meal_category(data["meal_category_id"]))
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"
@meal_cat_router.callback_query(F.data.startswith('meal_category_delete_'))
async def meal_category_deleting(callback: CallbackQuery, state: FSMContext):
    await callback.answer('')
    category_id = int(callback.data.split('_')[3])

    # –ï—Å–ª–∏ –≤ –±–∞–∑–µ –Ω–µ—Ç –±–ª—é–¥ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if not await rq_m.get_first_meal_from_category(category_id):
        restaurant_id = await rq.delete_meal_category(category_id)
        await callback.message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!',
                                      reply_markup=await back_to_restaurant_meal_categories(restaurant_id))
    else:
        await state.set_state(st.MealCategoryEditing.delete)
        await state.update_data(category_id=category_id)
        await callback.message.answer('–í–Ω–∏–º–∞–Ω–∏–µ! ‚ö†Ô∏è\n–í –±–∞–∑–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –æ –±–ª—é–¥–∞—Ö, '
                                      '–æ—Ç–Ω–æ—Å—è—â–∏—Ö—Å—è –∫ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.\n–ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –±–ª—é–¥–∞—Ö, '
                                      '–æ—Ç–Ω–æ—Å—è—â–∏—Ö—Å—è –∫ –Ω–∏–º, —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.'
                                      '\n–í—Å–µ —Ä–∞–≤–Ω–æ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é?', reply_markup=kb_m.yes_no)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞" –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥, —Å–æ–¥–µ—Ä–∂–∞—â–µ–π –±–ª—é–¥–∞
@meal_cat_router.message(F.text == '–î–∞ ‚úÖ', st.MealCategoryEditing.delete)
async def delete_yes(message: Message, state: FSMContext):
    data = await state.get_data()
    restaurant_id = await rq.delete_meal_category(data["category_id"])
    await message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!',
                         reply_markup=await back_to_restaurant_meal_categories(restaurant_id))
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–µ—Ç" –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥, —Å–æ–¥–µ—Ä–∂–∞—â–µ–π –±–ª—é–¥–∞
@meal_cat_router.message(F.text == '–ù–µ—Ç ‚ùå', st.MealCategoryEditing.delete)
async def delete_no(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ ü¶â', reply_markup=await kb.back_to_meal_category(data["category_id"]))
    await state.clear()
