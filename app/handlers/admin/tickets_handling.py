"""–ó–¥–µ—Å—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥, callback-–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""

from aiogram import F, Router, Bot
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext          # –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

import app.keyboards.admin.tickets_handling as kb
import app.keyboards.admin.main_menu as kb_main
import app.states as st
import app.database.requests.users as rq_usr
import app.database.requests.tickets as rq_tick
import app.filters as flt

from app.handlers.admin.main_menu import cmd_start

adm_ticket_router = Router()  # router –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ (Dispatcher) –≤–Ω–µ —Ñ–∞–π–ª–∞ —Å —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
adm_ticket_router.message.filter(flt.CheckAdmin())
adm_ticket_router.callback_query.filter(flt.CheckAdmin())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@adm_ticket_router.message(F.text == '–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ üîç')
async def get_tickets(message: Message):
    await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã:', reply_markup=await kb.all_tickets())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
@adm_ticket_router.callback_query(F.data.startswith('ticket_'))
async def ticket_answer(callback: CallbackQuery, state: FSMContext):
    await state.set_state(st.TicketAnswer.answer)                           # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–∞–ø—Ä–æ—Å')
    ticket = await rq_tick.get_ticket(int(callback.data.split('_')[1]))   # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ id
    user = await rq_usr.get_user_by_id(ticket.user_id)                 # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.update_data(user_tg_id=user.tg_id)              # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –µ–º—É
    await state.update_data(ticket_id=ticket.id)                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –µ–≥–æ –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    # –í—ã–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    await callback.message.answer(f'–ó–∞–ø—Ä–æ—Å: {ticket.text}\n\n{user.username} | {user.phone_number}\n\n–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç üìù',
                                  reply_markup=kb.ticket_exit)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å:
@adm_ticket_router.message(st.TicketAnswer.answer)
async def send_answer(message: Message, state: FSMContext, bot: Bot):
    info = await state.get_data()                                               # –ü–æ–ª—É—á–µ–Ω–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await bot.send_message(chat_id=info["user_tg_id"], text=message.text)       # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ id
    await message.answer('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ü¶â', reply_markup=kb_main.admin_menu)
    await rq_tick.delete_ticket(info["ticket_id"])                                      # –£–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ –ë–î
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
@adm_ticket_router.callback_query(F.data == 'to_ticket_list')
async def back_from_ticket(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–í—ã –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞–∑–∞–¥')
    await state.clear()
    await get_tickets(callback.message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@adm_ticket_router.callback_query(F.data == 'to_main')
async def to_main(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–í—ã –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    await cmd_start(callback.message, state)

